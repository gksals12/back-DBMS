/*
   요구사항
   음료수 판매 업체입니다. 음료수마다 당첨번호가 있습니다. 
   음료수의 당첨번호는 1개이고 당첨자의 정보를 알아야 상품을 배송할 수 있습니다.
   당첨 번호마다 당첨 상품이 있고, 당첨 상품이 배송 중인지 배송 완료인지 구분해야 합니다.
*/

-- 사용자 1
CREATE SEQUENCE SEQ_USER;
CREATE TABLE TBL_USER(
   ID NUMBER CONSTRAINT PK_USER PRIMARY KEY,
   USER_NAME VARCHAR2(255) NOT NULL,
   USER_ADDRESS VARCHAR2(255) NOT NULL,
   USER_PHONE VARCHAR(255) NOT NULL
);

-- 음료수 1
CREATE SEQUENCE SEQ_SOFT_DRINK;
CREATE TABLE TBL_SOFT_DRINK(
   ID NUMBER CONSTRAINT PK_SOFT_DRINK PRIMARY KEY,
   SOFT_DRINK_NAME VARCHAR2(255) NOT NULL UNIQUE,
   SOFT_DRINK_PRICE NUMBER DEFAULT 0,
   SOFT_DRINK_STOCK NUMBER DEFAULT 999,
   SOFT_DRINK_MAKE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 상품 1
CREATE SEQUENCE SEQ_PRODUCT;
CREATE TABLE TBL_PRODUCT(
   ID NUMBER CONSTRAINT PK_PRODUCT PRIMARY KEY,
   PRODUCT_NAME VARCHAR(255) NOT NULL UNIQUE,
   PRODUCT_STOCK NUMBER DEFAULT 999
);

-- 주문 - FK사용자, FK음료수
CREATE SEQUENCE SEQ_ORDER;
CREATE TABLE TBL_ORDER(
   ORDER_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
   USER_ID NUMBER,
   SOFT_DRINK_ID NUMBER,
   CONSTRAINT FK_ORDER_USER FOREIGN KEY(USER_ID)
   REFERENCES TBL_USER(ID),
   CONSTRAINT FK_ORDER_SOFT_DRINK FOREIGN KEY(SOFT_DRINK_ID)
   REFERENCES TBL_SOFT_DRINK(ID)
);

-- 운 FK - 음료수
CREATE SEQUENCE SEQ_LOTTERY;
CREATE TABLE TBL_LOTTERY(
   ID NUMBER CONSTRAINT PK_LOTTERY PRIMARY KEY,
   SOFT_DRINK_ID NUMBER,
   CONSTRAINT FK_LOTTERY_SOFT_DRINK FOREIGN KEY(SOFT_DRINK_ID)
   REFERENCES TBL_SOFT_DRINK(ID)
);

-- 추첨 FK운, FK상품
CREATE SEQUENCE SEQ_CIRULATION;
CREATE TABLE TBL_CIRULATION(
   ID NUMBER CONSTRAINT PK_CIRULATION PRIMARY KEY,
   LOTTERY_ID NUMBER,
   PRODUCT_ID NUMBER,
   CONSTRAINT FK_CIRULATION_LOTTERY FOREIGN KEY(LOTTERY_ID)
   REFERENCES TBL_LOTTERY(ID),
   CONSTRAINT FK_CIRULATION_PRODUCT FOREIGN KEY(PRODUCT_ID)
   REFERENCES TBL_PRODUCT(ID)
);

-- 배송 FK상품, FK사용자
CREATE SEQUENCE SEQ_DELIVERY;
CREATE TABLE TBL_DELIVERY(
   ID NUMBER CONSTRAINT PK_DELIVERY PRIMARY KEY,
   PRODUCT_ID NUMBER,
   USER_ID NUMBER,
   CONSTRAINT FK_DELIVERY_PRODUCT FOREIGN KEY(PRODUCT_ID)
   REFERENCES TBL_PRODUCT(ID),
   CONSTRAINT FK_DELIVERY_USER FOREIGN KEY(USER_ID)
   REFERENCES TBL_USER(ID)
);

CREATE SEQUENCE DRINKS;
CREATE TABLE DRINKS(
	ID NUMBER CONSTRAINT PK_DRINKS PRIMARY KEY,
);

CREATE SEQUENCE EVENT_NUMBER;
CREATE TABLE EVENT_NUMBER(
	ID NUMBER CONSTRAINT PK_EVENT_NUMBER PRIMARY KEY,
	EVENT_NUMBER_TYPE VARCHAR2(255) NOT NULL
	CONSTRAINT BAN_TYPE CHECK(EVENT_NUMBER_TYPE IN ('1','3','5''7','9'))
);

CREATE SEQUENCE DRINK_NUMBER;
CREATE TABLE DRINK_NUMBER(
	ID NUMBER CONSTRAINT PK_DRINK_NUMBER PRIMARY KEY,
	DRINKS_ID NUMBER,
	EVENT_NUMBER_ID NUMBER,
	CONSTRAINT FK_DRINK_NUMBER_DRINKS FOREIGN KEY(DRINKS_ID)
	REFERENCES TBL_DRINKS,
	CONSTRAINT FK_DRINK_NUMBER_EVENT_NUMBER FOREIGN KEY(EVENT_NUMBER_ID)
	REFERENCES TBL_EVENT_NUMBER(ID)
);

CREATE SEQUENCE PRODUCT;
CREATE TABLE PRODUCT(
	ID NUMBER CONSTRAINT PK_PRODUCT PRIMARY KEY,
	PRODUCT_NAME VARCHAR2(255),
	PRODUCT_INFO VARCHAR2(255)
	EVENT_NUMBER_ID NUMBER,
	CONSTRAINT FK_PRODUCT_EVENT_NUMBER FOREIGN KEY(EVENT_NUMBER_ID)
	REFERENCES TBL_EVENT_NUMBER(ID)
);

CREATE SEQUENCE CUSTOMER_INFO;
CREATE TABLE CUSTOMER_INFO(
	ID NUMBER CONSTRAINT PK_CUSTOMER_INFO PRIMARY KEY,
	CUSTOMER_INFO_NAME VARCHAR2(255),
	CUSTOMER_INFO_ADDRESS VARCHAR2(255),
	CUSTOMER_INFO_PHONE VARCHAR2(255)
	EVENT_NUMBER_ID NUMBER,
	CONSTRAINT FK_CUSTOMER_INFO_EVENT_NUMBER(EVENT_NUMBER_ID)
	REFERENCES TBL_EVENT_NUMBER_INFO(ID)
);

CREATE SEQUENCE DELIVERY;
CREATE TABLE DELIVERY(
	ID NUMBER CONSTRAINT PK_DELIVERY PRIMARY KEY,
	DELIVERY_DEPART TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	DELIVERY_ARRIVE TIMESTAMP
	CUSTOMER_INFO_ID NUMBER,
	PRODUCT_ID NUMBER,
	CONSTRAINT FK_DELIVERY_CUSTOMER_INFO(CUSOMER_INFO_ID)
	REFERENCES TBL_CUSTOMER_INFO(ID),
	CONSTRAINT FK_DELIVERY_PRODUCT(PRODUCT_ID)
	REFERENCES TBL_PORDUCT(ID)
);

/*
요구사항
   이커머스 창업 준비중입니다. 
   기업과 사용자 간 거래를 위해 기업의 정보와 사용자 정보가 필요합니다.
   기업의 정보는 기업 이름, 주소, 대표번호가 있고
   사용자 정보는 이름, 주소, 전화번호가 있습니다. 
   결제 시 사용자 정보와 기업의 정보, 결제한 카드의 정보 모두 필요하며,
   상품의 정보도 필요합니다. 상품의 정보는 이름, 가격, 재고입니다.
   사용자는 등록한 카드의 정보를 저장할 수 있으며, 
   카드의 정보는 카드번호, 카드사, 회원 정보가 필요합니다.
   
   기업 이름 주소 대표번호
   사용자 이름 주소 전화번호
   상품결제 - 기업 사용자 카드 상품
   상품 이름 가격 재고
   카드 가드번호 카드사 사용자
*/
CREATE SEQUENCE SEQ_COMPANY;
CREATE TABLE TBL_COMPNAY(
	ID NUMBER CONSTRAINT PK_COMPANY PRIMARY KEY,
	COMPNAY_NAME VARCHAR2(255) NOT NULL UNIQUE,
	COMPANY_ADDRESS VARCHAR2(255) NOT NULL,
	COMPANY_CALL VARCHAR2(255) DEFAULT '000-000-000'
);

CREATE SEQUENCE SEQ_CUSTOMER;
CREATE TABLE TBL_CUSTOMER(
	ID NUMBER CONSTRAINT PK_CUSTOMER PRIMARY KEY,
	CUSTOMER_NAME VARCHAR2(255) NOT NULL,
	CUSTOMER_ADDRESS VARCHAR2(255) NOT NULL,
	CUSTOMER_CALL VARCHAR2(255) DEFAULT '000-0000-0000'
);

CREATE SEQUENCE SEQ_CARD;
CREATE TABLE TBL_CARD(
	ID NUMBER CONSTRAINT PK_CARD PRIMARY KEY,
	CARD_NUMBER NUMBER NOT NULL,
	CARD_COMPANY VARCHAR2(255) NOT NULL,
	CUSTOMER_ID NUMBER,
	CONSTRAINT FK_CARD_CUSTOMER FOREIGN KEY(CUSTOMER_ID)
	REFERENCES TBL_CUSTOMER(ID)
);

CREATE SEQUENCE SEQ_PRODUCT;
CREATE TABLE TBL_PRODUCT(
	ID NUMBER CONSTRAINT PK_PRODUCT PRIMARY KEY,
	PRODUCT_NAME VARCHAR2(255) NOT NULL UNIQUE,
	PRODUCT_PRICE NUMBER DEFAULT 0,
	PRODUCT_STOCK NUMBER DEFAULT 999,
	COMPANY_ID NUMBER,
	CONSTRAINT FK_PRODUCT_COMPANY FOREIGN KEY(COMPANY_ID)
	REFERENCES TBL_COMPNAY(ID)
);

CREATE SEQUENCE SEQ_PAYLIST;
CREATE TABLE TBL_PAYLIST(
	ID NUMBER CONSTRAINT PK_PAYLIST PRIMARY KEY,
	COMPANY_ID NUMBER,
	CUSTOMER_ID NUMBER,
	CARD_ID NUMBER,
	PRODUCT_ID NUMBER,
	CONSTRAINT FK_PAYLIST_COMPANY FOREIGN KEY(COMPANY_ID)
	REFERENCES TBL_COMPNAY(ID),
	CONSTRAINT FK_PAYLIST_CUSTOMER FOREIGN KEY(CUSTOMER_ID)
	REFERENCES TBL_CUSTOMER(ID),
	CONSTRAINT FK_PAYLIST_CARD FOREIGN KEY(CARD_ID)
	REFERENCES TBL_CARD(ID),
	CONSTRAINT FK_PAYLIST_PRODUCT FOREIGN KEY(PRODUCT_ID)
	REFERENCES TBL_PRODUCT(ID)
);

SELECT * FROM TBL_PAYLIST;





