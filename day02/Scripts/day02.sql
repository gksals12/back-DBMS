-- 동물 테이블
-- 이름, 나이, 색
CREATE SEQUENCE SEQ_ANIMAL
START WITH 1
INCREMENT BY 10;

CREATE TABLE TBL_ANIMAL(
   ID NUMBER CONSTRAINT PK_ANIMAL PRIMARY KEY,
   ANIMAL_NAME VARCHAR2(255) NOT NULL UNIQUE,
   ANIMAL_AGE NUMBER DEFAULT 0,
   ANIMAL_COLOR VARCHAR2(255)
);

INSERT INTO TBL_ANIMAL
VALUES(SEQ_ANIMAL.NEXTVAL, '진도니', 5, '갈색');

INSERT INTO TBL_ANIMAL
VALUES(SEQ_ANIMAL.NEXTVAL, '치즈', 5, '주황색');

SELECT * FROM TBL_ANIMAL;

-- 컬럼 이름 변경
-- RENAME A TO B: 테이블의 이름을 변경
-- RENAME COLUMN TO B: 테이블의 컬럼 이름 변경
ALTER TABLE TBL_ANIMAL RENAME COLUMN ANIMAL_NAME TO ANIMAL_SPECIES;
ALTER TABLE TBL_ANIMAL RENAME TO TBL_PET;
SELECT * FROM TBL_PET;

-- 테이블이 바뀌면 컬럼명도 모두 바꿔야한다.
ALTER TABLE TBL_PET RENAME COLUMN ANIMAL_SPECIES TO PET_SPECIES;
ALTER TABLE TBL_PET RENAME COLUMN ANIMAL_AGE TO PET_AGE;
ALTER TABLE TBL_PET RENAME COLUMN ANIMAL_COLOR TO PET_COLOR;

-- 시퀀스 이름 변경
RENAME SEQ_ANIMAL TO SEQ_PET;

-- PK키는 이름을 바로 바꿀 수 없다.
-- PK키를 삭제하고, 다시 추가해야한다.
-- 단, FK키가 참조하고 있는 경우 삭제할 수 없다.
-- DROP CONSTRAINT: 제약조건 삭제
ALTER TABLE TBL_PET DROP CONSTRAINT PK_ANIMAL;

-- PK키 추가
ALTER TABLE TBL_PET ADD CONSTRAINT PK_PET PRIMARY KEY(ID);

DROP TABLE TBL_PET;

CREATE TABLE TBL_PET(
   ID NUMBER,
   PET_NAME VARCHAR2(255) NOT NULL UNIQUE,
   PET_AGE NUMBER DEFAULT 0,
   PET_COLOR VARCHAR2(255),
   CONSTRAINT PK_ANIMAL PRIMARY KEY(ID)
);

-- 자동차 테이블
-- 자동차 번호
-- 자동차 브랜드
-- 자동차 출시 날짜
-- 색상
-- 가격 
CREATE SEQUENCE SEQ_CAR;
CREATE TABLE TBL_CAR(
   ID NUMBER CONSTRAINT PK_CAR PRIMARY KEY,
   CAR_NUMBER NUMBER UNIQUE NOT NULL,
   CAR_BRAND VARCHAR2(255),
   CAR_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
   CAR_COLOR VARCHAR2(255),
   CAR_PRICE NUMBER
);

INSERT INTO TBL_CAR(ID, CAR_NUMBER, CAR_BRAND, CAR_COLOR, CAR_PRICE)
VALUES(SEQ_CAR.NEXTVAL, 12345678, '현대', '블랙', 10000000);

SELECT * FROM TBL_CAR;


-- 유저 테이블, 게시글 테이블
CREATE SEQUENCE SEQ_USER;
CREATE TABLE TBL_USER(
   ID NUMBER CONSTRAINT PK_USER PRIMARY KEY,
   USER_NAME VARCHAR2(255),
   USER_AGE NUMBER
);

CREATE SEQUENCE SEQ_POST;
CREATE TABLE TBL_POST(
   ID NUMBER CONSTRAINT PK_POST PRIMARY KEY,
   POST_TITLE VARCHAR2(255) NOT NULL,
   POST_CONTENT VARCHAR2(255) NOT NULL,
   USER_ID NUMBER,
   CONSTRAINT FK_POST_USER FOREIGN KEY(USER_ID)
   REFERENCES TBL_USER(ID)
);

-- 요구사항
-- 회사에서 광고를 여러개 신청하려고 합니다.
-- 회사, 광고, 신청 테이블을 만들어주세요.
CREATE SEQUENCE SEQ_COMPANY;
CREATE TABLE TBL_COMPANY(
   ID NUMBER CONSTRAINT PK_COMPANY PRIMARY KEY,
   COMPANY_NAME VARCHAR2(255) NOT NULL UNIQUE,
   COMPANY_PHONE VARCHAR2(255) NOT NULL,
   COMPANY_ADDRESS VARCHAR(255)
);

CREATE SEQUENCE SEQ_ADVER;
CREATE TABLE TBL_ADVER(
   ID NUMBER CONSTRAINT PK_ADVER PRIMARY KEY,
   ADVER_TITLE VARCHAR2(255),
   ADVER_CONTENT VARCHAR2(255)
);

CREATE SEQUENCE SEQ_ADVER_FORM;
CREATE TABLE TBL_ADVER_FORM(
   ID NUMBER CONSTRAINT PK_ADVER_FORM PRIMARY KEY,
   COMPANY_ID NUMBER,
   ADVER_ID NUMBER,
   CONSTRAINT FK_ADVER_FORM_COMPANY FOREIGN KEY(COMPANY_ID)
   REFERENCES TBL_COMPANY(ID),
   CONSTRAINT FK_ADVER_FROM_ADVER FOREIGN KEY(ADVER_ID)
   REFERENCES TBL_ADVER(ID)
);

-- 요구 사항
-- 회원이 존재하고 회원은 여러 상품을 구매할 수 있습니다.
-- 데이터 베이스 시스템을 만들어주세요.
-- MEMBER
-- 이름, 나이, 핸드폰, 주소, 등급, ...
-- 하나의 상품을 여러 고객이 구매 할 수 있고, 한명의 고객이 여러 상품을 구해 할 수 있고
CREATE SEQUENCE SEQ_MEMBER;
CREATE TABLE TBL_MEMBER(
   ID NUMBER CONSTRAINT PK_MEMBER PRIMARY KEY,
   MEMBER_NAME VARCHAR2(255) NOT NULL,
   MEMBER_AGE NUMBER DEFAULT 0,
   MEMBER_PHONE VARCHAR2(255) DEFAULT '000-0000-0000',
   MEMBER_ADDRESS VARCHAR2(255),
   MEMBER_GRADE CHAR(10)
);

-- PRODUCT
-- 이름, 가격, 재고, 생산지, 생산일, ...
CREATE SEQUENCE SEQ_PRODUCT;
CREATE TABLE TBL_PRODUCT(
   ID NUMBER CONSTRAINT PK_PRODUCT PRIMARY KEY,
   PRODUCT_NAME VARCHAR(255) NOT NULL UNIQUE,
   PRODUCT_PRICE NUMBER DEFAULT 0 NOT NULL,
   PRODUCT_STOCK NUMBER DEFAULT 999,
   PRODUCT_MOU VARCHAR2(255),
   PRODUCT_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- ORDER
-- 회원_ID, 상품_ID, 주문일자, ...
CREATE SEQUENCE SEQ_ORDER;
CREATE TABLE TBL_ORDER(
   ID NUMBER CONSTRAINT PK_ORDER PRIMARY KEY,
   ORDER_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
   MEMBER_ID NUMBER,
   PRODUCT_ID NUMBER,
   CONSTRAINT FK_ORDER_MEMBER FOREIGN KEY(MEMBER_ID)
   REFERENCES TBL_MEMBER(ID),
   CONSTRAINT FK_ORDER_PRODUCT FOREIGN KEY(PRODUCT_ID)
   REFERENCES TBL_PRODUCT(ID)
);

-- 요구사항
-- 상품 판매자(TBL_SELLER)가 상품 구매자(TBL_BUYER)에게
-- 배송(TBL_DELEVERY)을 할 수 있는 기능이 필요해요.
-- 판매자: 음료, 음료 종류, 음료 크기, 만든 날짜
CREATE SEQUENCE SEQ_SELLER;
CREATE TABLE TBL_SELLER(
   ID NUMBER CONSTRAINT PK_SELLER PRIMARY KEY,
   SELLER_DRINK VARCHAR2(255) NOT NULL UNIQUE,
   SELLER_DRINK_KIND VARCHAR2(255) NOT NULL,
   SELLER_VOLUME NUMBER DEFAULT '1.5',
   SELLER_MAKE_DAY TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 구매자: 이름, 전화번호, 주소
CREATE SEQUENCE SEQ_BUYER;
CREATE TABLE TBL_BUYER(
   ID NUMBER CONSTRAINT PK_BUYER PRIMARY KEY,
   BUYER_NAME VARCHAR2(255) NOT NULL,
   BUYER_PHONE VARCHAR2(255),
   BUYER_ADDRESS VARCHAR2(255)
);

-- 배송: 배송 상태, 배송 시작 시간, 배송 완료 시간,
CREATE SEQUENCE SEQ_DELEVERY;
CREATE TABLE TBL_DELEVERY(
   ID NUMBER CONSTRAINT PK_DELEVERY PRIMARY KEY,
   DELEVERY_STATUS CHAR(10),
   DELEVERY_START_TIME TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
   DELEVERY_END_TIME TIMESTAMP,
   SELLER_ID NUMBER,
   BUYER_ID NUMBER,
   CONSTRAINT FK_DELEVERY_SELLER FOREIGN KEY(SELLER_ID)
   REFERENCES TBL_SELLER(ID),
   CONSTRAINT FK_DELEVERY_BUYER FOREIGN KEY(BUYER_ID)
   REFERENCES TBL_BUYER(ID)
);

-- 사용자(TBL_GOODS_USER)
-- 굿즈(TBL_GOODS)

-- 사용자 : 이름, 연락처, 주소

CREATE SEQUENCE SEQ_GOODS_USER;
CREATE TABLE TBL_GOODS_USER(
   ID NUMBER CONSTRAINT PK_GOODS_USER PRIMARY KEY,
   GOODS_USER_NAME VARCHAR2(255) NOT NULL,
   GOODS_USER_PHONE VARCHAR2(255) NOT NULL,
   GOODS_USER_ADDRESS VARCHAR2(255) NOT NULL
);

-- 굿즈: 상품명, 가격, 재고, 제작시간
CREATE SEQUENCE SEQ_GOODS;
CREATE TABLE TBL_GOODS(
   ID NUMBER CONSTRAINT PK_GOODS PRIMARY KEY,
   GOODS_NAME VARCHAR2(255) NOT NULL UNIQUE,
   GOODS_PRICE NUMBER DEFAULT 0,
   GOODS_STOCK NUMBER DEFAULT 999,
   GOODS_MAKE_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP
);

-- 선물하기(TBL_GIFTS)
-- FK
CREATE SEQUENCE SEQ_GIFTS;
CREATE TABLE TBL_GIFTS(
   ID NUMBER CONSTRAINT PK_GIFTS PRIMARY KEY,
   GIFTS_MESSAGE VARCHAR2(255) NOT NULL,
   GOODS_USER_ID NUMBER,
   GOODS_ID NUMBER,
   CONSTRAINT FK_GIFTS_GOODS_USER FOREIGN KEY(GOODS_USER_ID)
   REFERENCES TBL_GOODS_USER(ID),
   CONSTRAINT FK_GIFTS_GOODS FOREIGN KEY(GOODS_ID)
   REFERENCES TBL_GOODS(ID)
);

/*
   요구사항
   유치원을 하려고 하는데, 아이들이 체험학습 프로그램을 신청해야 합니다.
   아이들 정보는 이름, 나이, 성별이 필요하고 학부모는 이름, 나이, 주소, 전화번호, 성별이 필요해요
   체험학습은 체험학습 제목, 체험학습 내용, 이벤트 이미지 여러 장이 필요합니다.
   아이들은 여러 번 체험학습에 등록할 수 있어요.
*/

-- 아이 
-- 이름, 나이, 성별
CREATE SEQUENCE SEQ_CHILD;
CREATE TABLE TBL_CHILD(
   ID NUMBER CONSTRAINT PK_CHILD PRIMARY KEY,
   CHILD_NAME VARCHAR2(255) NOT NULL,
   CHILD_AGE NUMBER,
   CHILD_GENDER CHAR(5)
);

-- 부모 FK
-- 이름, 나이, 주소, 전화번호, 성별
CREATE SEQUENCE SEQ_PARENT;
CREATE TABLE TBL_PARENT(
   ID NUMBER CONSTRAINT PK_PARENT PRIMARY KEY,
   PARENT_NAME VARCHAR2(255) NOT NULL,
   PARENT_AGE NUMBER,
   PARENT_ADDRESS VARCHAR2(255),
   PARENT_PHONE VARCHAR2(255) NOT NULL,
   PARNET_GENDER CHAR(5),
   CHILD_ID NUMBER,
   CONSTRAINT FK_PARENT_CHILD FOREIGN KEY(CHILD_ID)
   REFERENCES TBL_CHILD(ID)
);

-- 체험학습
-- 제목, 체험학습 내용
CREATE SEQUENCE SEQ_FIELD_TRIP;
CREATE TABLE TBL_FIELD_TRIP(
   ID NUMBER CONSTRAINT PK_FIELD_TRIP PRIMARY KEY,
   FIELD_TRIP_TITLE VARCHAR2(255),
   FIELD_TRIP_CONTENT VARCHAR2(255),
   FIELD_TRIP_NUMBER NUMBER
);

-- 체험학습 이미지 FK
CREATE SEQUENCE SEQ_FIELD_TRIP_FILE;
CREATE TABLE TBL_FIELD_TRIP_FILE(
   ID NUMBER CONSTRAINT PK_FIELD_TRIP_FILE PRIMARY KEY,
   FIELD_TRIP_FILE_NAME VARCHAR2(255),
   FIELD_TRIP_FILE_PATH VARCHAR2(255),
   FIELD_TRIP_ID NUMBER,
   CONSTRAINT FK_FIELD_TRIP_FILE_FIELD_TRIP FOREIGN KEY(FIELD_TRIP_ID)
   REFERENCES TBL_FIELD_TRIP(ID)
);
-- 신청 FK
CREATE SEQUENCE SEQ_APPLY;
CREATE TABLE TBL_APPLY(
   ID NUMBER CONSTRAINT PK_APPLY PRIMARY KEY,
   APPLY_DATE TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
   CHILD_ID NUMBER,
   FIELD_TRIP_ID NUMBER,
   CONSTRAINT FK_APPLY_CHILD FOREIGN KEY(CHILD_ID)
   REFERENCES TBL_CHILD(ID),
   CONSTRAINT FK_APPLY_FIELD_TRIP FOREIGN KEY(FIELD_TRIP_ID)
   REFERENCES TBL_FIELD_TRIP(ID)
);

/*

   요구사항
   안녕하세요, 광고 회사를 운영하려고 준비중인 사업가입니다.
   광고주는 기업이고 기업 정보는 이름, 주소, 대표번호, 기업종류(스타트업, 중소기업, 중견기업, 대기업)입니다.
   광고는 제목, 내용이 있고 기업은 여러 광고를 신청할 수 있습니다.
   기업이 광고를 선택할 때에는 카테고리로 선택하며, 대카테고리, 중카테고리, 소카테고리가 있습니다.

*/

-- 회사
-- 이름, 주소, 대표번호, 기업종류(스타트업, 중소기업, 중견기업, 대기업)
CREATE SEQUENCE SEQ_COMPANY;
CREATE TABLE TBL_COMPANY(
   ID NUMBER CONSTRAINT PK_COMPANY PRIMARY KEY,
   COMPANY_NAME VARCHAR2(255) NOT NULL,
   COMPANY_ADDRESS VARCHAR2(255) NOT NULL,
   COMPANY_PHONE VARCHAR2(255),
   COMPANY_TYPE VARCHAR2(255) NOT NULL
   CONSTRAINT BAN_TYPE CHECK(COMPANY_TYPE IN ('스타트업', '중소기업', '중견기업', '대기업'))
);

-- 광고
CREATE SEQUENCE SEQ_ADVERTISEMENT;
CREATE TABLE TBL_ADVERTISEMENT(
   ID NUMBER CONSTRAINT PK_ADVERTISEMENT PRIMARY KEY,
   ADVERTISEMENT_TITLE VARCHAR2(255) NOT NULL,
   ADVERTISEMENT_CONTENT VARCHAR2(255) NOT NULL
);

-- 신청 FK
-- 대카테고리 FK
CREATE SEQUENCE SEQ_TBL_CATEGORY_A;
CREATE TABLE TBL_CATEGORY_A(
   ID NUMBER CONSTRAINT PK_CATEGORY_A PRIMARY KEY,
   CATEGORY_A_NAME VARCHAR2(255) NOT NULL,
   ADVERTISEMENT_ID NUMBER,
   CONSTRAINT FK_CATEGORY_A_ADVERTISEMENT FOREIGN KEY(ADVERTISEMENT_ID)
   REFERENCES TBL_ADVERTISEMENT(ID)
);

-- 중카테고리 FK
CREATE SEQUENCE SEQ_CATEGODY_B;
CREATE TABLE TBL_CATEGORY_B(
   ID NUMBER CONSTRAINT PK_CATEGORY_B PRIMARY KEY,
   CATEGORY_B_NAME VARCHAR2(255) NOT NULL,
   CATEGORY_A_ID NUMBER,
   CONSTRAINT FK_CATEGORY_B_CATEGOGY_A FOREIGN KEY(CATEGORY_A_ID)
   REFERENCES TBL_CATEGORY_A(ID)
);

-- 소카테고리 FK
CREATE SEQUENCE SEQ_CATEGORY_C;
CREATE TABLE TBL_CATEGORY_C(
   ID NUMBER CONSTRAINT PK_CATEGORY_C PRIMARY KEY,
   CATEGORY_B_ID NUMBER,
   CONSTRAINT FK_CATEGORY_C_CATEGORY_B FOREIGN KEY(CATEGORY_B_ID)
   REFERENCES TBL_CATEGORY_B(ID)
);

-- 신청 테이블
CREATE SEQUENCE SEQ_ADVERTISEMENT_APPLY;
CREATE TABLE TBL_ADVERTISEMENT_APPLY(
   ID NUMBER CONSTRAINT PK_ADVERTISEMENT_APPLY PRIMARY KEY,
   COMPANY_ID NUMBER,
   ADVERTISEMENT_ID NUMBER,
   CONSTRAINT FK_ADVERTISEMENT_APPLY_COMPANY FOREIGN KEY(COMPANY_ID)
   REFERENCES TBL_COMPANY(ID),
   CONSTRAINT FK_ADVERTISEMENT_APPLY_ADVERTISEMENT FOREIGN KEY(ADVERTISEMENT_ID)
   REFERENCES TBL_ADVERTISEMENT(ID)
);






















